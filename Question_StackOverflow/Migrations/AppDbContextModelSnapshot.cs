// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Question_StackOverflow.DAL;

namespace Question_StackOverflow.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Question_StackOverflow.Models.Bar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FooId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentBarId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FooId");

                    b.HasIndex("ParentBarId");

                    b.ToTable("Bars");
                });

            modelBuilder.Entity("Question_StackOverflow.Models.Foo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MainEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MainEntityId");

                    b.ToTable("Foos");
                });

            modelBuilder.Entity("Question_StackOverflow.Models.MainEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MainEntities");
                });

            modelBuilder.Entity("Question_StackOverflow.Models.Bar", b =>
                {
                    b.HasOne("Question_StackOverflow.Models.Foo", null)
                        .WithMany("Bars")
                        .HasForeignKey("FooId");

                    b.HasOne("Question_StackOverflow.Models.Bar", "ParentBar")
                        .WithMany("ChildrenBars")
                        .HasForeignKey("ParentBarId");

                    b.Navigation("ParentBar");
                });

            modelBuilder.Entity("Question_StackOverflow.Models.Foo", b =>
                {
                    b.HasOne("Question_StackOverflow.Models.MainEntity", null)
                        .WithMany("Foos")
                        .HasForeignKey("MainEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Question_StackOverflow.Models.Bar", b =>
                {
                    b.Navigation("ChildrenBars");
                });

            modelBuilder.Entity("Question_StackOverflow.Models.Foo", b =>
                {
                    b.Navigation("Bars");
                });

            modelBuilder.Entity("Question_StackOverflow.Models.MainEntity", b =>
                {
                    b.Navigation("Foos");
                });
#pragma warning restore 612, 618
        }
    }
}
